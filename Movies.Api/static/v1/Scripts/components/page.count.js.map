{"version":3,"sources":["page.count.es6.js"],"names":["window","_proxy","getInterceptor","object","propertyName","attr","_data","undefined","_computedAttrs","setInterceptor","value","updatePostfixAddInterceptor","original","updatePostfixSubtractInterceptor","extend","tag","viewModel","define","currentPage","type","set","pageCount","maxpages","events","inserted","syncPager","options","total","page","maxVisible","bootpag","_el","_ev","data"],"mappings":";;;;;;;;;;;;;;;;;;;AAAC,QAAI,CAACA,OAAOC,MAAZ,EAAoB;AACjBD,eAAOC,MAAP,GAAgB;AACZC,4BAAgB,wBAAUC,MAAV,EAAkBC,YAAlB,EAAgC;AAC5C,oBAAID,OAAOE,IAAP,KAAiBF,OAAOG,KAAP,IAAgBH,OAAOG,KAAP,CAAaF,YAAb,MAA+BG,SAAhD,IAA+DJ,OAAOK,cAAP,IAAyBL,OAAOK,cAAP,CAAsBJ,YAAtB,CAAxG,CAAJ,EAAmJ;AAC/I,2BAAOD,OAAOE,IAAP,CAAYD,YAAZ,CAAP;AACH,iBACD,OAAOD,OAAOC,YAAP,CAAP;AACH,aANW,EAOZK,gBAAgB,wBAAUN,MAAV,EAAkBC,YAAlB,EAAgCM,KAAhC,EAAuC;AACnD,oBAAIP,OAAOE,IAAX,EAAiB;AACb,2BAAOF,OAAOE,IAAP,CAAYD,YAAZ,EAA0BM,KAA1B,CAAP;AACH,iBAFD,MAGK;AACD,2BAAOP,OAAOC,YAAP,IAAuBM,KAA9B;AACH;AACJ,aAdW,EAeZC,6BAA6B,qCAAUR,MAAV,EAAkBC,YAAlB,EAAgC;AACzD,oBAAIQ,WAAW,KAAKV,cAAL,CAAoBC,MAApB,EAA4BC,YAA5B,CAAf,CACA,KAAKK,cAAL,CAAoBN,MAApB,EAA4BC,YAA5B,EAA0CQ,WAAW,CAArD,EACA,OAAOA,QAAP;AACH,aAnBW;AAoBZC,8CAAkC,0CAAUV,MAAV,EAAkBC,YAAlB,EAAgCM,KAAhC,EAAuC;AACrE,oBAAIE,WAAW,KAAKV,cAAL,CAAoBC,MAApB,EAA4BC,YAA5B,CAAf,CACA,KAAKK,cAAL,CAAoBN,MAApB,EAA4BC,YAA5B,EAA0CM,QAAQ,CAAlD,EACA,OAAOE,QAAP;AACH,aAxBW,EAAhB;AA0BH,K,kBAvBc,kDAAcE,MAAd,CAAqB;AAChCC,aAAK,YAD2B;AAEhCC,mBAAW,4CAAQF,MAAR,CAAe;AACtBG,oBAAQ;AACJC,6BAAa;AACTC,0BAAM,QADG;AAETC,yBAAK,aAAUV,KAAV,EAAiB;AAClB,4BAAIA,UAAUH,SAAV,IAAuBG,UAAU,IAAjC,IAAyCA,QAAQ,CAArD,EAAwD;AACpD,mCAAO,CAAP;AACH,yBAFD,MAGK;AACD,mCAAOA,KAAP;AACH;AACJ;AATQ,iBADT;AAYJW,2BAAW;AACPF,0BAAM,QADC;AAEPC,yBAAK,aAAUV,KAAV,EAAiB;AAClB,4BAAIA,UAAUH,SAAV,IAAuBG,UAAU,IAAjC,IAAyCA,QAAQ,CAArD,EAAwD;AACpD,mCAAO,CAAP;AACH,yBAFD,MAGK;AACD,mCAAOA,KAAP;AACH;AACJ,qBATM,EAZP;AAuBJY,0BAAU;AACNH,0BAAM,QADA;AAENC,yBAAK,aAAUV,KAAV,EAAiB;AAClB,4BAAIA,UAAUH,SAAV,IAAuBG,UAAU,IAAjC,IAAyCA,QAAQ,CAArD,EAAwD;AACpD,mCAAO,CAAP;AACH,yBAFD,MAGK;AACD,mCAAOA,KAAP;AACH;AACJ;AATK;AAvBN;AADc,SAAf,CAFqB;AAuChCa,gBAAQ;AACJC,sBAAU,WADN;AAEJ,oCAAwB,WAFpB;AAGJ,kCAAsB,WAHlB;AAIJ,iCAAqB,WAJjB;AAKJ,2CAA+B,WAL3B;AAMJ,yCAA6B,WANzB;AAOJ,wCAA4B,WAPxB;AAQJC,uBAAW,qBAAY;AACnB,oBAAIC,UAAU;AACVC,uEAAO,IAAP,4BADU;AAEVC,sEAAM,IAAN,8BAFU;AAGVC,4EAAY,IAAZ;AAHU,iBAAd;AAKA,4DAAE,IAAF,cAAgBC,OAAhB,CAAwBJ,OAAxB;AACH,aAfG;AAgBJ,8BAAkB,qBAAUK,GAAV,EAAeC,GAAf,EAAoBC,IAApB,EAA0B;AACxC,+FAA6BA,IAA7B;AACH;AAlBG;AAvCwB,KAArB,C","file":"page.count.js","sourcesContent":["ï»¿import can from 'can.full';\r\nimport $ from 'jquery';\r\nimport bootpag from 'bootpag';\r\n\r\nexport default can.Component.extend({\r\n    tag: \"page-count\",\r\n    viewModel: can.Map.extend({\r\n        define: {\r\n            currentPage: {\r\n                type: 'number',\r\n                set: function (value) {\r\n                    if (value === undefined || value === null || value < 1) {\r\n                        return 1;\r\n                    }\r\n                    else {\r\n                        return value;\r\n                    }\r\n                }\r\n            },\r\n            pageCount: {\r\n                type: 'number',\r\n                set: function (value) {\r\n                    if (value === undefined || value === null || value < 1) {\r\n                        return 1;\r\n                    }\r\n                    else {\r\n                        return value;\r\n                    }\r\n                }\r\n            },\r\n            maxpages: {\r\n                type: 'number',\r\n                set: function (value) {\r\n                    if (value === undefined || value === null || value < 1) {\r\n                        return 1;\r\n                    }\r\n                    else {\r\n                        return value;\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    }),\r\n    events: {\r\n        inserted: 'syncPager',\r\n        '{currentPage} change': 'syncPager',\r\n        '{pageCount} change': 'syncPager',\r\n        '{maxpages} change': 'syncPager',\r\n        '{viewModel} currentPage set': 'syncPager',\r\n        '{viewModel} pageCount set': 'syncPager',\r\n        '{viewModel} maxpages set': 'syncPager',\r\n        syncPager: function () {\r\n            let options = {\r\n                total: this.viewModel.pageCount,\r\n                page: this.viewModel.currentPage,\r\n                maxVisible: this.viewModel.maxpages\r\n            };\r\n            $(this.element).bootpag(options);\r\n        },\r\n        '{element} page': function (_el, _ev, data) {\r\n            this.viewModel.currentPage = data;\r\n        }\r\n    }\r\n})"]}